AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM application for Periodic Reference Data Ingestion

Parameters:
  ProgramDataTableName:
    Type: String
    Description: Name of the Program Data DynamoDB table
  ProgramDataTableArn: # <-- Add this parameter
    Type: String
    Description: ARN of the Program Data DynamoDB table
  WatchModeApiKeySecretArn:
    Type: String
    Description: "The ARN of the secret containing the WatchMode API key"
  WatchModeHostname:
    Type: String
    Description: "The Hostname for WatchMode API"

Resources:
  ReferenceDataLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: UKTVReferenceLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: UKTVReferenceLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - dynamodb:BatchWriteItem
                Resource: !Ref ProgramDataTableArn
              - Effect: Allow # Add permission to get the secret API KEY value
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref WatchModeApiKeySecretArn
  PeriodicReferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PeriodicUKTVReferenceFunction
      Handler: reference.lambda_handler
      Runtime: python3.12
      CodeUri: ../src/periodic_reference_data/
      Description: Periodically fetches TV reference data from WatchMode API and saves it to DynamoDB.
      MemorySize: 256
      Timeout: 60 # Adjusted timeout, 300 might be excessive for this
      Role: !GetAtt ReferenceDataLambdaRole.Arn
      Events:
        ScheduledTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(1 day) # Example: runs once a day
            Name: DailyUKTVReferenceTrigger
            Enabled: true
            # Input to pass the refresh_sources and regions parameters
            Input: '{"refresh_sources": "Y", "regions": "GB"}'
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref ProgramDataTableName
          WATCHMODE_API_KEY_SECRET_ARN: !Ref WatchModeApiKeySecretArn
          WATCHMODE_HOSTNAME: !Ref WatchModeHostname
          AWS_ENDPOINT_URL: "" # for testing
    Metadata:
      BuildMethod: python3.12

Outputs:
  PeriodicReferenceFunctionName:
    Description: "Name of the Periodic Reference Data Lambda function"
    Value: !Ref PeriodicReferenceFunction
  PeriodicReferenceFunctionArn:
    Description: "ARN of the Periodic Reference Data Lambda function"
    Value: !GetAtt PeriodicReferenceFunction.Arn